name: Code Coverage

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  coverage:
    runs-on: ubuntu-latest
    container: golang:1.23

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: praktikum
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install coverage tools
        run: |
          go install github.com/jandelgado/gcov2lcov@latest
          go install github.com/mattn/goveralls@latest

      - name: Build with coverage
        run: |
          cd cmd/shortener
          go build -cover -coverpkg=./... -buildvcs=false -o shortener

      - name: Run tests and generate coverage
        run: |
          cd cmd/shortener
          mkdir -p coverage
          # Запуск тестов с генерацией coverage
          go test -coverprofile=coverage/coverage.out -coverpkg=./... ./...
          # Конвертация в lcov формат
          gcov2lcov -infile=coverage/coverage.out -outfile=coverage/lcov.info
          # Вывод краткого отчета
          echo "=== Coverage Summary ==="
          go tool cover -func=coverage/coverage.out | tee coverage/summary.txt
          # Генерация HTML отчета
          go tool cover -html=coverage/coverage.out -o coverage/coverage.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: cmd/shortener/coverage

      - name: Send to Coveralls
        if: github.ref == 'refs/heads/main'
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: |
          cd cmd/shortener
          goveralls -coverprofile=coverage/coverage.out -service=github