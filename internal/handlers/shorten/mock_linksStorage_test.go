// Code generated by mockery v2.50.0. DO NOT EDIT.

package shorten

import mock "github.com/stretchr/testify/mock"

// MocklinksStorage is an autogenerated mock type for the linksStorage type
type MocklinksStorage struct {
	mock.Mock
}

type MocklinksStorage_Expecter struct {
	mock *mock.Mock
}

func (_m *MocklinksStorage) EXPECT() *MocklinksStorage_Expecter {
	return &MocklinksStorage_Expecter{mock: &_m.Mock}
}

// AddLink provides a mock function with given fields: raw
func (_m *MocklinksStorage) AddLink(raw string) string {
	ret := _m.Called(raw)

	if len(ret) == 0 {
		panic("no return value specified for AddLink")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(raw)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MocklinksStorage_AddLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddLink'
type MocklinksStorage_AddLink_Call struct {
	*mock.Call
}

// AddLink is a helper method to define mock.On call
//   - raw string
func (_e *MocklinksStorage_Expecter) AddLink(raw interface{}) *MocklinksStorage_AddLink_Call {
	return &MocklinksStorage_AddLink_Call{Call: _e.mock.On("AddLink", raw)}
}

func (_c *MocklinksStorage_AddLink_Call) Run(run func(raw string)) *MocklinksStorage_AddLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MocklinksStorage_AddLink_Call) Return(_a0 string) *MocklinksStorage_AddLink_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MocklinksStorage_AddLink_Call) RunAndReturn(run func(string) string) *MocklinksStorage_AddLink_Call {
	_c.Call.Return(run)
	return _c
}

// NewMocklinksStorage creates a new instance of MocklinksStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMocklinksStorage(t interface {
	mock.TestingT
	Cleanup(func())
}) *MocklinksStorage {
	mock := &MocklinksStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
